apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
{{- include "common.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
    {{- include "common.labels" . | indent 6 }}
  template:
    metadata:
      labels:
      {{- include "common.labels" . | indent 8 }}
    spec:
      containers:
      - name: roboshop-{{ .Values.appName }}
        image: {{ .Values.appImage }}
        ports:
        - containerPort: {{ .Values.service.containerPort }}
        resources:
          requests:
            memory: "{{ .Values.resources.requests.memory }}"
            cpu: "{{ .Values.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.resources.limits.memory }}"
            cpu: "{{ .Values.resources.limits.cpu }}"
        envFrom:
          - secretRef:
              name: {{ .Values.appName }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.containerPort }}
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.containerPort }}
          initialDelaySeconds: 60
          periodSeconds: 60
          failureThreshold: 30


